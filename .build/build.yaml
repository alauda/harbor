apiVersion: builds.katanomi.dev/v1alpha1
kind: Build
spec:
  workspaces:
    - description: >
        This workspace is shared among all the pipeline tasks to read/write
        common resources
      name: source
    - optional: true
      name: cache
      mountPath: /go/pkg
  tasks:
    - name: generate-version
      workspaces:
        - name: source
          workspace: source
      taskSpec:
        results:
          - name: commit-short-id
            description: The precise commit short SHA that was fetched by this Task
        steps:
          - name: generate-commit-short-id
            image: build-harbor.alauda.cn/devops/kubectl-devops:master
            imagePullPolicy: IfNotPresent
            workingDir: $(workspaces.source.path)
            script: |
              #!/bin/sh
              set -ex
              
              # avoid `detected dubious ownership in repository at`
              git config --global --add safe.directory "$(workspaces.source.path)"
              
              RESULT_SHA="$(git rev-parse HEAD)"
              echo -n "${RESULT_SHA:0:8}" >  $(results.commit-short-id.path)
        workspaces:
          - name: source
            workspace: source
          - name: cache
            optional: true
            workspace: cache

    - name: build-image
      runAfter:
        - generate-version
      workspaces:
        - name: source
          workspace: source
        - name: cache
          workspace: cache
      params:
        - name: version
          value: 2.2.3
        - name: commit-short-id
          value: $(tasks.generate-version.results.commit-short-id)
        - name: container-images
          value:
            - build-harbor.alauda.cn/devops/docker:19-dind
      taskSpec:
        metadata:
          annotations:
            katanomi.dev/class.ociContainerImageBuild: "true"
        params:
          - name: version
            description: harbor version
          - name: commit-short-id
            description: The precise commit short SHA that was fetched by this Task
          - name: container-images
            type: array
            description: used for insert secret
        volumes:
          - name: docker-sock
            hostPath:
              path: /var/run/docker.sock
        steps:
          - name: build-amd64
            image: registry.alauda.cn:60080/devops/builder-tools:ubuntu-v3.8.1
            imagePullPolicy: IfNotPresent
            workingDir: $(workspaces.source.path)
            volumeMounts:
              - mountPath: /var/run/docker.sock
                name: docker-sock
            script: |
              #!/bin/bash
              set -ex
              
              git config --global --add safe.directory /workspace/source
              
              export BASEIMAGETAG=$(params.version)-$(params.commit-short-id) 
              export VERSIONTAG=$(params.version)-amd64-$(params.commit-short-id) 
                                        
              bash ./patch-amd64.sh
              
              make compile
              sleep 20m
              make build_base_docker
              make build

          - name: build-arm64
            image: registry.alauda.cn:60080/devops/builder-tools:ubuntu-v3.8.1
            imagePullPolicy: IfNotPresent
            workingDir: $(workspaces.source.path)
            volumeMounts:
              - mountPath: /var/run/docker.sock
                name: docker-sock
            script: |
              #!/bin/bash
              set -ex
              
              git config --global --add safe.directory /workspace/source

              export BASEIMAGETAG=$(params.version)-$(params.commit-short-id) 
              export VERSIONTAG=$(params.version)-arm64-$(params.commit-short-id)  

              bash ./patch-arm64.sh

              make compile
              make build_base_docker
              make build

        workspaces:
          - name: source
            workspace: source
          - name: cache
            optional: true
            workspace: cache




